<?php
// ALGORITMO-VIVIANA MUÑOZ

$dest = "destinatario@gmail.com"; //Email de destino
$asunto = "Asunto"; //Asunto
$cuerpo = "Cuerpo del mensaje, puedes poner <b>HTML</b> aqui tambien"; //Cuerpo del mensaje
//Cabeceras del correo
$headers = "From: Juan juan@gmail.com\r\n"; //Quien envia?
$headers .= "X-Mailer: PHP5\n";
$headers .= 'MIME-Version: 1.0' . "\n";
$headers .= 'Content-type: text/html; charset=iso-8859-1' . "\r\n"; //mail($dest,$asunto,$cuerpo,$headers);

$var =2;
$VAR =2;
$var123 =2;
$_123 =2;
$_ =2;
$_var155_3 =2;

for ($i = 1; $i <= 10; $i++) {
$var="2";
echo $i;
}

class JupilerLeague extends SplHeap
{
public function compare($array1, $array2)
{
$values1 = array_values($array1);
$values2 = array_values($array2);
if ($values1[0] === $values2[0]) return 0;
}
}



<?php
class JupilerLeague extends SplHeap
{
public function compare($array1, $array2)
{
$values1 = array_values($array1);
$values2 = array_values($array2);
if ($values1[0] === $values2[0]) return 0;
return $values1[0] < $values2[0] ? -1 : 1;
}
}
$heap = new JupilerLeague();
$heap->insert(array ('AA Gent' => 15));
$heap->insert(array ('Anderlecht' => 20));
$heap->insert(array ('Cercle Brugge' => 11));
?>


<?php
class JupilerLeague extends SplHeap
{
public function compare($array1, $array2)
{
$values1 = array_values($array1);
$values2 = array_values($array2);
if ($values1[0] === $values2[0]) return 0;
return $values1[0] < $values2[0] ? -1 : 1;
}
}
$heap = new JupilerLeague();
$heap->insert(array ('AA Gent' => 15));
$heap->insert(array ('Anderlecht' => 20));
$heap->insert(array ('Cercle Brugge' => 11));
switch ($i) {
    case 0:
        echo "i es igual a 0";
        break;
    case 1:
        echo "i es igual a 1";
        break;
    case 2:
        echo "i es igual a 2";
        break;
}
for ($i = 1; $i <= 10; $i++) {
echo $i;
}
?>

function operaciones($n1, $n2, $operacion) {
$resultado = 0;
//
}
return $resultado; // Devolver el resultado


$pizza = "porcion1 porcion2 porcion3 porcion4 porcion5 porcion6";
$porciones = explode(" ", $pizza); echo $porciones[0]; // porcion1
echo $porciones[1]; // porcion2


$comida = array('frutas' => array('naranja', 'platano', 'manzana'), 'verduras' => array('zanahoria', 'col', 'guisante')); // Cuenta recursiva
echo count($comida, COUNT_RECURSIVE); // muestra 8
// Cuenta normal
echo count($comida); // muestra 2



// ALGORITMO-JOHANNA LOPEZ
function recoge($var, $m = "")
{
    if (!isset($_REQUEST[$var])) {
        $tmp = is_array($m) [] : "";
    } elseif (!is_array($_REQUEST[$var])) {
        $tmp = trim(htmlspecialchars($_REQUEST[$var]));
    } else {
        $tmp = $_REQUEST[$var];
        array_walk_recursive($tmp, function (&$valor) {
            $valor = trim(htmlspecialchars($valor));
        });
    }
    return $tmp;
}
//funcion fondo de reserva
function calcularFondoReserva($var)
{
  $fondo=8.33;
  $tmp=$var*$fondo/100;
  return round($tmp,2);
}
//funcion DTS
function calcularDTS($var)
{
  $tmp=$var/12;
  return round($tmp,2);
}
//funcion DCS
function calcularDCS()
{
  $sueldo_basico=425;
  $tmp=$sueldo_basico/12;
  return round($tmp,2);
}
$nombre = recoge("nombre");
$edad   = recoge("edad");
$sueldo   = recoge("sueldo");
$fondo= calcularFondoReserva($sueldo);
$dts=calcularDTS($sueldo);
$dcs=calcularDCS();

$rol->campo1;

print "  <p>Su nombre es <strong>$nombre</strong>.</p>\n";
print "\n";
print "  <p>Su edad es <strong>$edad</strong> años.</p>\n";
print "\n";
print "  <p>Su sueldo es <strong>$sueldo</strong> </p>\n";
print "\n";
print "  <p>Su Fondo es <strong>$fondo</strong> </p>\n";
print "\n";
print "  <p>Su DTS es <strong>$dts</strong> </p>\n";
print "\n";
print "  <p>Su DCS es <strong>$dcs</strong> </p>\n";

//ALGORITMO CINDY BOHORQUEZ
//Crear clase
class NombreClase {
    // Declaración de una propiedad
    public $variable = 'Un valor cualquiera';
    // Declaración de un método
    public function mostrarVariable(){
        echo $this->variable;
    }
}
//instanciar clase
$a = new nombreClase();

//operadores
$a = (false && foo());
$b = (true  || foo());
$c = (false and foo());
$d = (true  or  foo());

//asignacion, operaciones
$a = 3;
$a += 5;
$b = "Hola ";
$b .= "ahi!";
$f = 2.2;

//Monticulos
class JupilerLeague extends SplHeap { 
    public function compare($array1, $array2) {
         echo "a es mayor que b"; }}

$heap = new jupilerLeague();

$heap->insert($value);

$heap->insert(19);

?>
